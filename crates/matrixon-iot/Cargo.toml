# =============================================================================
# Matrixon IoT Module - Internet of Things Integration
# =============================================================================
#
# Project: Matrixon - Ultra High Performance Matrix NextServer (Synapse Alternative)  
# Module: matrixon-iot - IoT Device Management and Integration
# Author: arkSong (arksong2018@gmail.com) - Founder of Matrixon Innovation Project
# Date: 2024-12-19
# Version: 0.11.0-alpha (Production Ready)
# License: Apache 2.0 / MIT
#
# Description:
#   IoT (Internet of Things) integration module for Matrixon Matrix server.
#   Provides comprehensive IoT device management, protocol support, and 
#   real-time data processing capabilities.
#
# Features:
#   • MQTT broker integration (mosquitto, rumqtt)
#   • CoAP (Constrained Application Protocol) support
#   • LoRaWAN gateway functionality  
#   • WebSocket real-time communication
#   • Device authentication and security
#   • Time-series data storage and analytics
#   • Protocol translation (MQTT <-> Matrix)
#   • Edge computing capabilities
#   • Device lifecycle management
#   • Firmware OTA updates
#
# Performance Targets:
#   • 100,000+ concurrent IoT device connections
#   • <10ms message processing latency
#   • 1M+ messages per second throughput
#   • 99.9% uptime reliability
#
# =============================================================================

[package]
name = "matrixon-iot"
version = "0.11.0-alpha"
edition = "2021"
authors = ["arkSong <arksong2018@gmail.com>"]
license = "Apache-2.0/MIT"
repository = "https://github.com/arksong2018/Matrixon"
description = "Matrixon IoT Module - Internet of Things Integration and Device Management"

[dependencies]
# Core dependencies
tokio = { workspace = true }
tracing = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
async-trait = { workspace = true }
futures = { workspace = true }
anyhow = { workspace = true }

# Time and UUID handling
chrono = { workspace = true }
uuid = { workspace = true }

# MQTT Protocol Support
rumqttc = { version = "0.24", optional = true }  # MQTT v5 client
rumqttd = { version = "0.18", optional = true }  # MQTT broker
# paho-mqtt = { version = "0.12", optional = true }  # Alternative MQTT client - temporarily disabled

# CoAP Protocol Support  
coap = { version = "0.12", optional = true }
coap-lite = { version = "0.11", optional = true }

# WebSocket for real-time communication
tokio-tungstenite = { version = "0.21", features = ["native-tls"], optional = true }
tungstenite = { version = "0.21", optional = true }

# Networking and protocols
socket2 = "0.5"
mio = "0.8"
tokio-util = { version = "0.7", features = ["net", "codec"] }

# Security and encryption
ring = { version = "0.17", optional = true }
rustls = { version = "0.21", optional = true }
webpki-roots = { version = "0.25", optional = true }

# Data processing and analytics - temporarily disabled due to version conflicts
# polars = { version = "0.35", features = ["lazy", "temporal", "strings"], optional = true }
# arrow = { version = "50.0", optional = true }

# Database integration
sqlx = { workspace = true }
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }

# Time-series database
influxdb = { version = "0.7", optional = true }
prometheus = { version = "0.13", optional = true }

# LoRaWAN support
lorawan = { version = "0.7", optional = true }

# Modbus protocol support
tokio-modbus = { version = "0.11", optional = true }

# HTTP/REST API
reqwest = { version = "0.11", features = ["json", "stream"] }
axum = { workspace = true }

# Configuration
figment = { version = "0.10", features = ["toml", "env"] }

# Compression and serialization
bincode = { version = "1.3", optional = true }
lz4_flex = { version = "0.11", optional = true }
zstd = { version = "0.13", optional = true }

# Error handling and logging
tracing-subscriber = { workspace = true }

# Additional dependencies for missing features
num_cpus = "1.0"

# Workspace dependencies
matrixon-common = { workspace = true }
matrixon-core = { workspace = true }
matrixon-db = { workspace = true }

[dev-dependencies]
tokio-test = { workspace = true }
mockall = { workspace = true }
tempfile = { workspace = true }
test-log = { workspace = true }

[features]
default = ["mqtt", "coap", "websocket", "analytics"]

# Protocol support features
mqtt = ["rumqttc", "rumqttd"]
coap = ["dep:coap", "coap-lite"]
websocket = ["tokio-tungstenite", "tungstenite"]
modbus = ["tokio-modbus"]
lorawan = ["dep:lorawan"]

# Functionality features
analytics = []  # ["polars", "arrow"] - temporarily disabled
timeseries = ["influxdb", "prometheus"]
security = ["ring", "rustls", "webpki-roots"]
compression = ["bincode", "lz4_flex", "zstd"]

# Performance features
high_performance = ["tokio/rt-multi-thread"]
edge_computing = ["analytics", "compression"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"] 
