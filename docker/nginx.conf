# =============================================================================
# Matrixon Matrix NextServer - Nginx Production Configuration
# =============================================================================
#
# Project: Matrixon - Ultra High Performance Matrix NextServer
# Author: arkSong (arksong2018@gmail.com) - Founder of Matrixon Innovation Project
# Date: 2024-12-11
# Version: 0.11.0-alpha
# License: Apache 2.0 / MIT
#
# Description:
#   Production-grade nginx configuration for Matrixon Matrix server
#   High-performance reverse proxy with SSL termination and load balancing
#
# =============================================================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Optimize for high performance
worker_rlimit_nofile 65535;

# Optimize worker connections for high load
events {
    worker_connections 8192;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance optimization
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 50M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml
        application/rss+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=matrix_api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=matrix_media:10m rate=5r/s;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Upstream backend
    upstream matrixon_backend {
        server matrixon:6167;
        keepalive 32;
        keepalive_requests 100;
        keepalive_timeout 60s;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name _;
        
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Matrix server configuration
    server {
        listen 80;
        listen 443 ssl http2;
        listen 8448 ssl http2;  # Matrix federation port
        server_name matrixon.local;
        
        # SSL configuration (if certificates are available)
        # ssl_certificate /etc/nginx/ssl/matrixon.crt;
        # ssl_certificate_key /etc/nginx/ssl/matrixon.key;
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
        # ssl_prefer_server_ciphers off;
        
        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload";
        
        # Matrix API endpoints
        location /_matrix/ {
            proxy_pass http://matrixon_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffering
            proxy_buffering off;
            proxy_request_buffering off;
            
            # Rate limiting
            limit_req zone=matrix_api burst=20 nodelay;
            
            # CORS headers for Matrix API
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }
        }
        
        # Media repository with higher limits
        location /_matrix/media/ {
            proxy_pass http://matrixon_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Higher timeouts for media uploads
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            
            # Rate limiting for media
            limit_req zone=matrix_media burst=10 nodelay;
            
            # Larger body size for media uploads
            client_max_body_size 50M;
        }
        
        # Well-known endpoints for Matrix federation
        location /.well-known/matrix/server {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            return 200 '{"m.server": "matrixon.local:8448"}';
        }
        
        location /.well-known/matrix/client {
            add_header Content-Type application/json;
            add_header Access-Control-Allow-Origin *;
            return 200 '{"m.homeserver": {"base_url": "https://matrixon.local"}}';
        }
        
        # Metrics endpoint (internal only)
        location /metrics {
            allow 172.20.0.0/16;  # Docker network only
            deny all;
            
            proxy_pass http://matrixon_backend;
            proxy_set_header Host $host;
        }
        
        # Root redirect
        location = / {
            return 301 /_matrix/static/;
        }
        
        # Static files
        location /_matrix/static/ {
            proxy_pass http://matrixon_backend;
            proxy_set_header Host $host;
            
            # Cache static files
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
    }
} 
