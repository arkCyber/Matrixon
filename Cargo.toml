[workspace]
resolver = "3"
members = [
    "crates/matrixon-core",
    "crates/matrixon-api",
    "crates/matrixon-db",
    "crates/matrixon-e2ee",
    "crates/matrixon-users",
    "crates/matrixon-rooms",
    "crates/matrixon-media",
    "crates/matrixon-push",
    "crates/matrixon-ai",
    "crates/matrixon-interface",
    "crates/matrixon-bot",
    "crates/matrixon-ai-assistant",
    "crates/matrixon-common",
    "crates/matrixon-web3",
    "crates/matrixon-a2a",
    "crates/matrixon-ipfs",
    "crates/matrixon-monitor",
    "crates/matrixon-backup",
]
exclude = ["crates/matrixon-federation"]

[package]
name = "matrixon"
version = "0.11.0-alpha"
edition = "2021"
authors = ["arkSong <arksong2018@gmail.com>"]
license = "Apache-2.0/MIT"
repository = "https://github.com/arksong2018/Matrixon"
description = "Matrixon - Ultra High Performance Matrix NextServer (Synapse Alternative)"

[[bin]]
name = "matrixon"
path = "src/main.rs"

[workspace.package]
version = "0.11.0-alpha"
edition = "2021"
authors = ["arkSong <arksong2018@gmail.com>"]
license = "Apache-2.0/MIT"
repository = "https://github.com/arksong2018/Matrixon"
description = "Matrixon - Ultra High Performance Matrix NextServer (Synapse Alternative)"

[workspace.dependencies]
# Core dependencies
tokio = { version = "1.36", features = ["full"] }
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }
tracing-opentelemetry = "0.22"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
thiserror = "1.0"
async-trait = "0.1"
futures = "0.3"
futures-util = "0.3"
lru-cache = "0.1"
lru = "0.12"
sha2 = "0.10"
anyhow = "1.0"

# Configuration
figment = { version = "0.10", features = ["toml", "env"] }
clap = { version = "4.0", features = ["derive", "env"] }
clap_complete = "4.0"
toml = "0.8"

# CLI dependencies
dialoguer = { version = "0.11", features = ["completion"] }
comfy-table = "7.0"
tabled = "0.15"
shell-words = "1.1"
indicatif = "0.17"
csv = "1.3"
serde_yaml = "0.9"
dirs = "5.0"
colored = "2.0"
tracing-flame = "0.2"
sys-info = "0.9"
nix = { version = "0.27", features = ["resource"] }

# Authentication and security
jsonwebtoken = "9.2"
argon2 = "0.5"
hmac = "0.12"

# Metrics and monitoring
metrics = "0.22"
metrics-exporter-prometheus = "0.13"

# Matrix dependencies
ruma = { version = "0.12.3", features = ["compat"] }
ruma-federation-api = "0.11.1"
matrix-sdk = { version = "0.12.3", default-features = false, features = [
    "js",
    "rustls-tls",
] }

# Database
sqlx = { version = "0.7", features = [
    "runtime-tokio-rustls",
    "postgres",
    "chrono",
    "uuid",
] }
deadpool = "0.10"
deadpool-postgres = "0.10"

# Web framework
axum = { version = "0.7", features = ["ws"] }
tower = "0.4"
tower-http = { version = "0.5", features = ["trace", "cors"] }
hyper = { version = "1.0", features = ["full"] }

# UI components
yew = { version = "0.21", features = ["csr"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"
web-sys = { version = "0.3", features = [
    "Document",
    "Element",
    "HtmlElement",
    "Window",
    "console",
    "WebSocket",
    "MessageEvent",
    "BinaryType",
    "Blob",
    "Url",
    "FormData",
    "File",
    "FileReader",
    "FileReaderSync",
    "ProgressEvent",
    "DragEvent",
    "DataTransfer",
    "DataTransferItemList",
    "DataTransferItem",
] }
js-sys = "0.3"

# Styling
stylist = "0.13"
stylist-macros = "0.13"

# Bot framework
teloxide = { version = "0.12", features = ["macros"] }
teloxide-core = "0.9"

# NLP and AI
tokenizers = "0.15"
rust-bert = "0.21"

# Utilities
chrono = { version = "0.4", features = ["serde"] }
uuid = { version = "1.7", features = ["v4", "serde"] }
base64 = "0.21"
url = "2.5"
mime = "0.3"
mime_guess = "2.0"

# Added for workspace dependency error
mockall = "0.12"
tempfile = "3.8"

# Added for workspace dependency error
test-log = "0.2"

# Added for workspace dependency error
tokio-test = "0.4"

reqwest = { version = "0.11", features = ["json"] }
ring = "0.17"
rand = "0.8"

# Added for workspace dependency error
libsqlite3-sys = "0.31.0"

matrixon-core = { path = "crates/matrixon-core" }
matrixon-common = { path = "crates/matrixon-common" }
matrixon-ai = { path = "crates/matrixon-ai" }



# Add proc-macro dependencies
proc-macro2 = "1.0"
syn = { version = "2.0", features = ["full", "extra-traits"] }
quote = "1.0"

[workspace.package.dev-dependencies]
tokio-test = "0.4"
mockall = "0.12"
tempfile = "3.8"
test-log = "0.2"
wasm-bindgen-test = "0.3"
web-sys = { version = "0.3", features = ["console"] }
criterion = "0.5"
axum-test = "0.2"

[dependencies]
# Core dependencies
tokio = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
async-trait = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
anyhow = { workspace = true }

# Matrix dependencies
ruma = { workspace = true }
ruma-federation-api = { workspace = true }

# Database
sqlx = { workspace = true }
deadpool = { workspace = true }
deadpool-postgres = { workspace = true }

# Web framework
axum = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
hyper = { workspace = true }

# Utilities
chrono = { workspace = true }
uuid = { workspace = true }
base64 = { workspace = true }
url = { workspace = true }
reqwest = { workspace = true }
rand = { workspace = true }
# http = { workspace = true }

# Matrixon crates
matrixon-core = { workspace = true }
matrixon-common = { workspace = true }
matrixon-ai = { workspace = true }

# Additional production dependencies
# axum-server = "0.5"

# Optional allocator
tikv-jemallocator = { version = "0.5", optional = true }

# Configuration
figment = { workspace = true }
toml = { workspace = true }
clap = { workspace = true }
clap_complete = { workspace = true }

# CLI dependencies
dialoguer = { workspace = true }
comfy-table = { workspace = true }
tabled = { workspace = true }
shell-words = { workspace = true }
indicatif = { workspace = true }
csv = { workspace = true }
serde_yaml = { workspace = true }
dirs = { workspace = true }
colored = { workspace = true }
tracing-flame = { workspace = true }
sys-info = { workspace = true }
nix = { workspace = true }

# Authentication and security  
jsonwebtoken = { workspace = true }
argon2 = { workspace = true }
hmac = { workspace = true }

# Metrics and monitoring
metrics = { workspace = true }
metrics-exporter-prometheus = { workspace = true }
lru = { workspace = true }
tracing-opentelemetry = { workspace = true }

[dev-dependencies]
tokio-test = { workspace = true }
tempfile = { workspace = true }
test-log = { workspace = true }

[features]
default = []
jemalloc = ["tikv-jemallocator"]
backend_postgresql = []
